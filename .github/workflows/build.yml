name: Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: PDFium branch
        required: false
        default: main
      version:
        description: PDFium version
        required: false
        default: ""
      enable_v8:
        description: Enable V8
        type: boolean
        required: false
        default: false
      is_debug:
        description: Is debug
        type: boolean
        required: false
        default: false
      repository:
        description: Upload to repo
        required: false
      push_nuget:
        description: Publish to nuget.org
        type: boolean
        required: false
        default: false

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact: pdfium-wasm
            target_os: wasm
            target_cpu: wasm
            runner: ubuntu-20.04

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Workaround for libpcre2 i386 # https://github.com/actions/virtual-environments/issues/4589#issuecomment-1100899313
        if: matrix.target_os == 'android'
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set environment variables
        run: |
          cat >>$GITHUB_ENV <<END
          PDFium_BRANCH=${{ github.event.inputs.branch }}
          PDFium_IS_DEBUG=${{ github.event.inputs.is_debug }}
          PDFium_TARGET_CPU=${{ matrix.target_cpu }}
          PDFium_TARGET_OS=${{ matrix.target_os }}
          PDFium_TARGET_LIBC=${{ matrix.target_libc }}
          PDFium_ENABLE_V8=${{ github.event.inputs.enable_v8 }}
          PDFium_VERSION=${{ github.event.inputs.version }}
          MUSL_URL=${{ secrets.MUSL_URL }}
          END
          steps/00-environment.sh
        shell: bash
      - name: Install (1/2)
        run: steps/01-install.sh
        shell: bash
      - name: Checkout PDFium
        run: steps/02-checkout.sh
        shell: bash
      - name: Apply patches
        run: steps/03-patch.sh
        shell: bash
      - name: Install (2/2)
        run: steps/04-install-extras.sh
        shell: bash
      - name: Configure
        run: steps/05-configure.sh
        shell: bash
      - name: Build
        run: steps/06-build.sh
        shell: bash
      - name: Pack
        run: steps/07-pack.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: staging/
      - name: Test
        run: steps/08-test.sh
        shell: bash
      - name: Upload tarball to GitHub Release
        uses: ncipollo/release-action@v1
        if: ${{ github.event.inputs.repository }}
        with:
          repo: ${{ github.event.inputs.repository }}
          tag: ${{ github.event.inputs.branch }}
          allowUpdates: true
          draft: true
          artifacts: pdfium*.tgz
          token: ${{ secrets.GITHUB_TOKEN }}
